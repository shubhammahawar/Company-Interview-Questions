You are running a classroom and suspect that some of your students are passing around the answer to a multiple-choice question disguised as a random note. 
Your task is to write a function that, given a list of words and a note, finds and returns the word in the list that is scrambled inside the note, 
if any exists. If none exist, it returns the result "-" as a string. 
There will be at most one matching word. The letters don't need to be in order or next to each other. The letters cannot be reused. Example:


import java.util.*;
public class Main {
    
    public static boolean checkIfScrambled(String word, String note){
        
        if(word.length()>note.length())
            return false;
        
        char [] wordArr = word.toCharArray();
        char [] noteArr = note.toCharArray();
        
        int wordLength = word.length();
        int noteLength = note.length();
        
        int p=0, q=0;
        Arrays.sort(wordArr);
        Arrays.sort(noteArr);
        
        while(p< wordLength && q<noteLength){
            if(wordArr[p]==noteArr[q]){
                p++;
                q++;
            }
            else{
                q++;
            }
        }
        
        return (p==wordLength);   
        
    }
    
    
    public static void main(String[] args) {
       
        String [] words ={"baby", " reference","cat","dada","dog","bird","ax","baz"};
        String [] notes = {"ctay","bcanihjsrrrferet","tbaykkjlga",  "bbbblkkjbaby", "dad", "breadmaking", "dadaa" };
        
        for(int j=0;j<notes.length;j++){
            int flag=1;
            
        for(int i=0;i<words.length;i++){
            if( checkIfScrambled(words[i],notes[j])){
               System.out.println("word "+j+words[i]);
                flag=0;
            }
        }  
            if(flag==1)
             System.out.println("word "+j+"--");
        }
    }
}


OUTPUT - 

word 0cat
word 1cat
word 2--
word 3baby
word 4--
word 5bird
word 6dada
