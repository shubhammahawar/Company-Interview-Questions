Question Link : https://practice.geeksforgeeks.org/problems/product-of-prime-factors5121/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article
T.C = O(sqrt(n) logn)
S.C = O(1)

class Solution{
    static long primeProduct(int N) 
    { 
        // code here
        
        int product =1;
        
        // Handle prime factor 2
        // explicitly so that can
        // optimally handle other
        // prime factors.
        
        if(N%2==0){
            product*=2;
            while(N%2==0){
                N=N/2;
            }
        }
        
        // n must be odd at this point.
        // So we can skip one element
        // (Note i = i +2)
        
        for(int i=3;i<=Math.sqrt(N);i+=2){
            if(N%i==0){
                product*=i;
                
                while(N%i==0){
                    N=N/i;
                }
            }
        }
        
        
         // This condition is to handle
        // the case when n is a prime
        // number greater than 2
        // means the number n which is left now or from starting is itself a prime like 5, 11
        if(N>2){
            product*=N;
        }
        return product;
    }
}
